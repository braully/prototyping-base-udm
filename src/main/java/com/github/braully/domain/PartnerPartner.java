//
// This file was generated by the JPA Modeler
//
package com.github.braully.domain;

import com.github.braully.util.UtilValidation;
import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import lombok.Getter;
import lombok.Setter;

@Table(schema = "base",
        uniqueConstraints = @UniqueConstraint(name = "uk_partner_partner",
                columnNames = {"fk_partner_target", "fk_partner_source", "type"})
)
@Entity
@Getter
@Setter
public class PartnerPartner extends AbstractEntity implements Serializable {

    @ManyToOne(targetEntity = Partner.class)
    private Partner partnerSource;
    @Basic
    private String type;

    @ManyToOne(targetEntity = Partner.class)
    private Partner partnerTarget;


    /*@Id
    private Long id;
     */
    public PartnerPartner() {

    }

    public void setPartnerTargetSeNull(Partner partner) {
        if (this.partnerTarget == null) {
            this.partnerTarget = partner;
        }
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        try {
            if (UtilValidation.isStringValid(partnerSource.getName())) {
                sb.append(partnerSource.getName());
            }
        } catch (Exception e) {

        }
        sb.append(" (");
        sb.append(type);
        if (this.isPersisted()) {
            sb.append(" #").append(this.id);
        }
        sb.append(')');
        return sb.toString();
    }
}
